package com.nzl.dao;

import com.nzl.common.constant.TableConstant;
import com.nzl.dao.provider.BlogTypeSqlProvider;
import com.nzl.pojo.BlogType;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.util.List;

public interface BlogTypeMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blog_type
     *
     * @mbg.generated
     */
    @Delete({
        "delete from blog_type",
        "where blog_type_id = #{blogTypeId,jdbcType=TINYINT}"
    })
    int deleteByPrimaryKey(Byte blogTypeId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blog_type
     *
     * @mbg.generated
     */
    @Insert({
        "insert into blog_type (blog_type_id, parent_blog_type_id, ",
        "blog_type_name, gmt_modified, ",
        "gmt_create)",
        "values (#{blogTypeId,jdbcType=TINYINT}, #{parentBlogTypeId,jdbcType=TINYINT}, ",
        "#{blogTypeName,jdbcType=CHAR}, #{gmtModified,jdbcType=TIMESTAMP}, ",
        "#{gmtCreate,jdbcType=TIMESTAMP})"
    })
    int insert(BlogType record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blog_type
     *
     * @mbg.generated
     */
    @InsertProvider(type= BlogTypeSqlProvider.class, method="insertSelective")
    int insertSelective(BlogType record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blog_type
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "blog_type_id, parent_blog_type_id, blog_type_name, gmt_modified, gmt_create",
        "from blog_type",
        "where blog_type_id = #{blogTypeId,jdbcType=TINYINT}"
    })
    @Results({
        @Result(column="blog_type_id", property="blogTypeId", jdbcType=JdbcType.TINYINT, id=true),
        @Result(column="parent_blog_type_id", property="parentBlogTypeId", jdbcType=JdbcType.TINYINT),
        @Result(column="blog_type_name", property="blogTypeName", jdbcType=JdbcType.CHAR),
        @Result(column="gmt_modified", property="gmtModified", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="gmt_create", property="gmtCreate", jdbcType=JdbcType.TIMESTAMP)
    })
    BlogType selectByPrimaryKey(Byte blogTypeId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blog_type
     *
     * @mbg.generated
     */
    @UpdateProvider(type=BlogTypeSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(BlogType record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blog_type
     *
     * @mbg.generated
     */
    @Update({
        "update blog_type",
        "set parent_blog_type_id = #{parentBlogTypeId,jdbcType=TINYINT},",
          "blog_type_name = #{blogTypeName,jdbcType=CHAR},",
          "gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},",
          "gmt_create = #{gmtCreate,jdbcType=TIMESTAMP}",
        "where blog_type_id = #{blogTypeId,jdbcType=TINYINT}"
    })
    int updateByPrimaryKey(BlogType record);

    /**
     * 获取所有的博客类型
     * @return
     */
    @Select("select * from "+ TableConstant.BLOG_TYPE_TABLE)
    @Results({
            @Result(column="blog_type_id", property="blogTypeId", jdbcType=JdbcType.TINYINT, id=true),
            @Result(column="parent_blog_type_id", property="parentBlogTypeId", jdbcType=JdbcType.TINYINT),
            @Result(column="blog_type_name", property="blogTypeName", jdbcType=JdbcType.CHAR),
            @Result(column="gmt_modified", property="gmtModified", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="gmt_create", property="gmtCreate", jdbcType=JdbcType.TIMESTAMP)
    })
    List<BlogType> listAllSubTypes();
}