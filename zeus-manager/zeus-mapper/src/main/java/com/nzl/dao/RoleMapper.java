package com.nzl.dao;

import com.nzl.common.constant.TableConstant;
import com.nzl.dao.provider.RoleSqlProvider;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import javax.management.relation.Role;
import java.util.Set;

public interface RoleMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role
     *
     * @mbg.generated
     */
    @Delete({
        "delete from role",
        "where role_id = #{roleId,jdbcType=TINYINT}"
    })
    int deleteByPrimaryKey(Byte roleId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role
     *
     * @mbg.generated
     */
    @Insert({
        "insert into role (role_id, available, ",
        "description, role, ",
        "gmt_create, gmt_modified)",
        "values (#{roleId,jdbcType=TINYINT}, #{available,jdbcType=INTEGER}, ",
        "#{description,jdbcType=VARCHAR}, #{role,jdbcType=VARCHAR}, ",
        "#{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP})"
    })
    int insert(Role record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role
     *
     * @mbg.generated
     */
    @InsertProvider(type= RoleSqlProvider.class, method="insertSelective")
    int insertSelective(Role record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "role_id, available, description, role, gmt_create, gmt_modified",
        "from role",
        "where role_id = #{roleId,jdbcType=TINYINT}"
    })
    @Results({
        @Result(column="role_id", property="roleId", jdbcType=JdbcType.TINYINT, id=true),
        @Result(column="available", property="available", jdbcType=JdbcType.INTEGER),
        @Result(column="description", property="description", jdbcType=JdbcType.VARCHAR),
        @Result(column="role", property="role", jdbcType=JdbcType.VARCHAR),
        @Result(column="gmt_create", property="gmtCreate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="gmt_modified", property="gmtModified", jdbcType=JdbcType.TIMESTAMP)
    })
    Role selectByPrimaryKey(Byte roleId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role
     *
     * @mbg.generated
     */
    @UpdateProvider(type=RoleSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Role record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role
     *
     * @mbg.generated
     */
    @Update({
        "update role",
        "set available = #{available,jdbcType=INTEGER},",
          "description = #{description,jdbcType=VARCHAR},",
          "role = #{role,jdbcType=VARCHAR},",
          "gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},",
          "gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}",
        "where role_id = #{roleId,jdbcType=TINYINT}"
    })
    int updateByPrimaryKey(Role record);

    /**
     * 列出用户的角色
     *
     * @param uid
     * @return
     */
    @Select("select role from " + TableConstant.ROLE_TABLE + " where role_id in (" +
            "SELECT role_id from " + TableConstant.USER_ROLE_TABLE + " left join user on user_role.uid=user.uid" +
            " where user.uid=#{uid})")
    Set<String> listUserRoles(String uid);
}