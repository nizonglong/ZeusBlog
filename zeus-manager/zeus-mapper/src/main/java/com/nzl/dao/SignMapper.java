package com.nzl.dao;

import com.nzl.dao.provider.SignSqlProvider;
import com.nzl.pojo.Sign;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

public interface SignMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sign
     *
     * @mbg.generated
     */
    @Delete({
        "delete from sign",
        "where sign_id = #{signId,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long signId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sign
     *
     * @mbg.generated
     */
    @Insert({
        "insert into sign (sign_id, uid, ",
        "status, month_day, total_day, ",
        "time, gmt_modified, ",
        "gmt_create)",
        "values (#{signId,jdbcType=BIGINT}, #{uid,jdbcType=VARCHAR}, ",
        "#{status,jdbcType=CHAR}, #{monthDay,jdbcType=TINYINT}, #{totalDay,jdbcType=INTEGER}, ",
        "#{time,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, ",
        "#{gmtCreate,jdbcType=TIMESTAMP})"
    })
    int insert(Sign record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sign
     *
     * @mbg.generated
     */
    @InsertProvider(type= SignSqlProvider.class, method="insertSelective")
    int insertSelective(Sign record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sign
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "sign_id, uid, status, month_day, total_day, time, gmt_modified, gmt_create",
        "from sign",
        "where sign_id = #{signId,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="sign_id", property="signId", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="uid", property="uid", jdbcType=JdbcType.VARCHAR),
        @Result(column="status", property="status", jdbcType=JdbcType.CHAR),
        @Result(column="month_day", property="monthDay", jdbcType=JdbcType.TINYINT),
        @Result(column="total_day", property="totalDay", jdbcType=JdbcType.INTEGER),
        @Result(column="time", property="time", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="gmt_modified", property="gmtModified", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="gmt_create", property="gmtCreate", jdbcType=JdbcType.TIMESTAMP)
    })
    Sign selectByPrimaryKey(Long signId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sign
     *
     * @mbg.generated
     */
    @UpdateProvider(type=SignSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Sign record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sign
     *
     * @mbg.generated
     */
    @Update({
        "update sign",
        "set uid = #{uid,jdbcType=VARCHAR},",
          "status = #{status,jdbcType=CHAR},",
          "month_day = #{monthDay,jdbcType=TINYINT},",
          "total_day = #{totalDay,jdbcType=INTEGER},",
          "time = #{time,jdbcType=TIMESTAMP},",
          "gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},",
          "gmt_create = #{gmtCreate,jdbcType=TIMESTAMP}",
        "where sign_id = #{signId,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(Sign record);
}